---
# Setup the RabbitMQ data directory. 
- name: Create the {{ APP_NAME }} data directory {{ APP_QUEUE_DATA }}. 
  file:
    name: "{{ APP_QUEUE_DATA }}"
    state: directory
    owner: "{{ APP_USER }}"
    mode: 0777
  become: true
- name: set SELinux permissions on {{ APP_QUEUE_DATA }}
  sefcontext:
    target: "{{ APP_QUEUE_DATA }}(/.*)?"
    setype: container_file_t
  become: true
  vars:
    ansible_python_interpreter: "{{ APP_PYTHON }}"
- name: reload SELinux policy to ensure that {{ APP_NAME }} is executable
  command: "restorecon -irv {{ APP_QUEUE_DATA }}"
  become: true

# Automate the deployment of RabbitMQ as a Podman container running as a Systemd service. 
- name: Create the {{ QUEUE_NAME }} systemd service {{ QUEUE_SYSTEMD }}. 
  template:
    src: chris_queue.service
    dest: "{{ QUEUE_SYSTEMD }}"
  become: true
  when: ansible_pkg_mgr != 'homebrew'
- name: Reload the services. 
  systemd:
    daemon_reload: true
  become: true
  when: ansible_pkg_mgr != 'homebrew'
- name: Start and enable the {{ QUEUE_SERVICE }} service. 
  service:
    name: "{{ QUEUE_SERVICE }}"
    enabled: true
    state: restarted
  become: true
  when: ansible_pkg_mgr != 'homebrew'


