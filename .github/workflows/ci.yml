name: CI

on:
  push:
    branches: [ master ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: FNNDSC/cube-integration-action@master
        with:
          repository: ${{ github.workspace }}
          which: all


  build:
    needs: [ test ]
    if: github.event_name == 'push' || github.event_name == 'release'
    runs-on: ubuntu-22.04
    env:
      repo_name: fnndsc/cube
    steps:
      - name: Get git tag
        id: git_info
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
      - name: Determine image tags
        id: determine
        env:
          git_tag: ${{ steps.git_info.outputs.tag }}
        run: |
          repo=${{ env.repo_name }}
          tag="${git_tag:-latest}"  # if build triggered by tag, use tag name

          # if tag is a version number prefixed by 'v', remove the 'v'
          if [[ "$tag" =~ ^v[0-9].* ]]; then
            tag="${tag:1}"
          fi

          dock_image=$repo:$tag
          echo $dock_image
          echo "dock_image=$dock_image" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
        id: buildx
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: |
            docker.io/${{ steps.determine.outputs.dock_image }}
            ghcr.io/${{ steps.determine.outputs.dock_image }}
          platforms: linux/amd64,linux/ppc64le,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          short-description: ChRIS backend
          readme-filepath: ./README.md
          repository: ${{ env.repo_name }}
