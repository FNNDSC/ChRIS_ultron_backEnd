name: CI

on:
  push:
    branches: [ master ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@just
      - name: Build development image
        run: just build
      - name: Pull other images
        run: just pull
      - name: Run unit tests
        run: just test-unit
      - name: Run integration tests
        run: just test-integration

  build:
    needs: [ test ]
    if: github.event_name == 'push' || github.event_name == 'release'
    runs-on: ubuntu-24.04
    env:
      repo_name: fnndsc/cube
    steps:
      - name: Determine image tags
        id: determine
        run: |
          repo="${{ env.repo_name }}"
          tag="${GITHUB_REF_NAME:-latest}"  # if build triggered by tag, use tag name

          # if tag is a version number prefixed by 'v', remove the 'v'
          if [[ "$tag" =~ ^v[0-9].* ]]; then
            tag="${tag:1}"
          fi

          dock_image=$repo:$tag
          echo $dock_image
          echo "dock_image=$dock_image" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: |
            docker.io/${{ steps.determine.outputs.dock_image }}
            ghcr.io/${{ steps.determine.outputs.dock_image }}
          platforms: linux/amd64,linux/ppc64le,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          short-description: ChRIS backend
          readme-filepath: ./README.md
          repository: ${{ env.repo_name }}
