name: CI

on:
  push:
    branches: [ master ]
    tags: [ '**' ]
  pull_request:
    branches: [ master ]


jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: docker build -t fnndsc/chris .
      - uses: FNNDSC/cube-integration-action@v3
        with:
          repository: ${{ github.workspace }}
          which: all


  build:
    needs: [ test ]
    if: github.event_name == 'push' || github.event_name == 'release'
    runs-on: ubuntu-20.04
    steps:
      - name: Get git tag
        id: git_info
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "::set-output name=tag::${GITHUB_REF##*/}"
      - name: Determine image tags
        id: determine
        env:
          git_tag: ${{ steps.git_info.outputs.tag }}
        run: |
          repo="${GITHUB_REPOSITORY,,}"  # to lower case
          tag="${git_tag:-latest}"  # if build triggered by tag, use tag name
          echo "::set-output name=repo::$repo"
          echo "::set-output name=tag::$tag"
          echo "::set-output name=dock_image::$repo:$tag"
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        id: buildx
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: ${{ steps.determine.outputs.dock_image }}
          platforms: linux/amd64,linux/ppc64le,linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
