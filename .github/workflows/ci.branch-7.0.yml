name: CI

on:
  push:
    branches: [ branch-7.0 ]
  pull_request:
    branches: [ branch-7.0 ]

jobs:
  test:
    if: github.ref_type == 'branch' || github.ref_name == 'pull_request'
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        engine: [ 'docker', 'podman' ]
        test-kind: [ 'unit', 'integration' ]
    steps:
      - name: Start podman daemon
        if: matrix.engine == 'podman'
        run: systemctl --user start podman.service
      - uses: taiki-e/install-action@just
      - uses: actions/checkout@v4
      - name: Run ${{ matrix.test-kind }} tests on ${{ matrix.engine }}
        uses: ./
        with:
          engine: ${{ matrix.engine }}
          command: test-${{ matrix.test-kind }}

  build:
    name: Build
    if: github.event_name == 'push'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Update __version__.py
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "__version__ = '${GITHUB_REF_NAME:1}'" > chris_backend/__version__.py
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/fnndsc/cube
            ghcr.io/fnndsc/cube
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # type=raw,value=latest,enable={{is_default_branch}}
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
